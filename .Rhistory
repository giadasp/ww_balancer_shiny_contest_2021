runApp()
runApp()
shiny::runApp()
runApp('C:/Users/giada.spaccapanico2/Desktop/repos/learn_shiny/bslib_semantic.R')
runApp('C:/Users/giada.spaccapanico2/Desktop/repos/learn_shiny/bslib_semantic.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd('C:/Users/giada.spaccapanico2/Desktop/repos/ww_balancer')
shiny::runApp()
runApp()
setwd('C:/Users/giada.spaccapanico2/Desktop/repos/ww_balancer')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd('C:/Users/giada.spaccapanico2/Desktop/repos/ww_balancer')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
setwd('C:/Users/giada.spaccapanico2/Desktop/repos/ww_balancer')
shiny::runApp()
runApp()
runApp()
setwd('C:/Users/giada.spaccapanico2/Desktop/repos/ww_balancer')
shiny::runApp()
runApp()
bs_theme_preview()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
bs_themer()
bslib::bs_themer()
bs_theme_preview(material, with_themer = TRUE)
bs_theme_preview()
runApp('C:/Users/giada.spaccapanico2/Desktop/repos/ww_balancer')
runApp()
runApp()
shiny::runApp()
tableOutput("village_1_roles")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
as.booleab
as.boolean
as.bool
as.logical
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
install.packages("ompr")
install.packages("ompr.roi")
install.packages("ompr")
install.packages("ROI")
install.packages("ROI.plugin.glpk")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?get_solution
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('C:/Users/giada.spaccapanico2/Desktop/repos/ww_balancer/components/modules/WWModelPairs.R')
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
?solve
library(lpSolve)
?solve
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
if (!require(remotes))
install.packages("remotes")
remotes::install_github("dirkschumacher/rcbc")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
f <-c("village"   ,"werewolves")
pasteo("w_",f)
paste0("w_",f)
df <- data.frame(w_village=c(2,2,2), w_werwolves = c(2,2,3))
df[[paste0("w_",f)]]
df[paste0("w_",f)]
df <- data.frame(w_village=c(2,2,2), w_werewolves = c(2,2,3))
df[paste0("w_",f)]
df[[paste0("w_",f)]]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?rcbc::cbc_solve()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
incProgress(1/10)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
x<- c("adsa", "fsfsdsf", "f")
y <- list(x,x,x)
data.frame(cbind(y))
data.frame(rbind(y))
data.frame(t(cbind(y)))
data.frame(t(cbind(y)))$X1
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
?bind_cols
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data.frame()
matrix(nrow = 0, ncol = 0)
runApp()
runApp()
runApp()
runApp()
traceback()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shinytest::recordTest("C:/Users/giada.spaccapanico2/Desktop/repos/ww_balancer")
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
?here
shiny::runApp()
shiny::runApp()
tracebakc()
traceback()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
